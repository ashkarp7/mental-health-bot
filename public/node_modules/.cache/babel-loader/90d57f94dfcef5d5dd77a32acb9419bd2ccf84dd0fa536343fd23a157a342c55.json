{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\mental-health-bot\\\\src\\\\components\\\\Chat\\\\InputArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { startVoiceRecording, stopVoiceRecording } from '../../services/voiceRecognition';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputArea = ({\n  onSendMessage,\n  isLoading\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const recordingIntervalRef = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputMessage.trim() && !isLoading) {\n      onSendMessage(inputMessage);\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const {\n        mediaRecorder,\n        stream\n      } = await startVoiceRecording();\n      mediaRecorderRef.current = mediaRecorder;\n      setIsRecording(true);\n      setRecordingTime(0);\n\n      // Start recording timer\n      recordingIntervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      const audioChunks = [];\n      mediaRecorder.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        // Here you would typically send to speech-to-text API\n        // For demo, we'll simulate with a placeholder message\n        setInputMessage(\"Voice message: I'm feeling overwhelmed with work today and could use some guidance on managing stress...\");\n\n        // Clean up\n        stream.getTracks().forEach(track => track.stop());\n        setIsRecording(false);\n        setRecordingTime(0);\n        if (recordingIntervalRef.current) {\n          clearInterval(recordingIntervalRef.current);\n        }\n      };\n      mediaRecorder.start();\n\n      // Auto-stop after 30 seconds\n      setTimeout(() => {\n        if (mediaRecorderRef.current && isRecording) {\n          stopRecording();\n        }\n      }, 30000);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Could not access microphone. Please check permissions and try again.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      stopVoiceRecording(mediaRecorderRef.current);\n      if (recordingIntervalRef.current) {\n        clearInterval(recordingIntervalRef.current);\n      }\n    }\n  };\n  const formatRecordingTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const quickResponses = [\"I'm feeling stressed\", \"I need motivation\", \"I'm having trouble sleeping\", \"I feel anxious\", \"I'm feeling lonely\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-t border-gray-200 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: quickResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(response),\n          className: \"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition duration-200\",\n          children: response\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 flex items-center space-x-2 text-red-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3 h-3 bg-red-500 rounded-full animate-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium\",\n        children: [\"Recording: \", formatRecordingTime(recordingTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs\",\n        children: \"(Tap mic again to stop)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: isRecording ? stopRecording : startRecording,\n        className: `px-4 py-2 rounded-lg transition duration-200 flex items-center justify-center ${isRecording ? 'bg-red-500 text-white animate-pulse' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n        title: isRecording ? 'Stop recording' : 'Start voice recording',\n        children: isRecording ? 'ðŸ”´' : 'ðŸŽ¤'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Share what's on your mind... I'm here to listen.\",\n          className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none transition duration-200\",\n          rows: \"1\",\n          style: {\n            minHeight: '42px',\n            maxHeight: '120px',\n            overflowY: inputMessage.length > 100 ? 'auto' : 'hidden'\n          },\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), inputMessage.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-1 right-2 text-xs text-gray-400\",\n          children: [inputMessage.length, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !inputMessage.trim() || isLoading,\n        className: \"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition duration-200 flex items-center space-x-2\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sending...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2197\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500\",\n        children: [\"In crisis? Contact\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"tel:988\",\n          className: \"text-indigo-600 hover:underline font-medium\",\n          children: \"988 Suicide & Crisis Lifeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), ' ', \"or\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"tel:911\",\n          className: \"text-red-600 hover:underline font-medium\",\n          children: \"911\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(InputArea, \"CXLiesFlIrOYsa8x/THJEbCeYtA=\");\n_c = InputArea;\nexport default InputArea;\nvar _c;\n$RefreshReg$(_c, \"InputArea\");","map":{"version":3,"names":["React","useState","useRef","startVoiceRecording","stopVoiceRecording","jsxDEV","_jsxDEV","Fragment","_Fragment","InputArea","onSendMessage","isLoading","_s","inputMessage","setInputMessage","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","recordingIntervalRef","handleSubmit","e","preventDefault","trim","handleKeyPress","key","shiftKey","startRecording","mediaRecorder","stream","current","setInterval","prev","audioChunks","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","clearInterval","start","setTimeout","stopRecording","error","console","alert","formatRecordingTime","seconds","mins","Math","floor","secs","toString","padStart","quickResponses","className","children","map","response","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","title","value","onChange","target","onKeyPress","placeholder","rows","style","minHeight","maxHeight","overflowY","length","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/mental-health-bot/src/components/Chat/InputArea.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { startVoiceRecording, stopVoiceRecording } from '../../services/voiceRecognition';\r\n\r\nconst InputArea = ({ onSendMessage, isLoading }) => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordingTime, setRecordingTime] = useState(0);\r\n  const mediaRecorderRef = useRef(null);\r\n  const recordingIntervalRef = useRef(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputMessage.trim() && !isLoading) {\r\n      onSendMessage(inputMessage);\r\n      setInputMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const { mediaRecorder, stream } = await startVoiceRecording();\r\n      mediaRecorderRef.current = mediaRecorder;\r\n      setIsRecording(true);\r\n      setRecordingTime(0);\r\n      \r\n      // Start recording timer\r\n      recordingIntervalRef.current = setInterval(() => {\r\n        setRecordingTime(prev => prev + 1);\r\n      }, 1000);\r\n      \r\n      const audioChunks = [];\r\n      \r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.push(event.data);\r\n      };\r\n      \r\n      mediaRecorder.onstop = () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        // Here you would typically send to speech-to-text API\r\n        // For demo, we'll simulate with a placeholder message\r\n        setInputMessage(\"Voice message: I'm feeling overwhelmed with work today and could use some guidance on managing stress...\");\r\n        \r\n        // Clean up\r\n        stream.getTracks().forEach(track => track.stop());\r\n        setIsRecording(false);\r\n        setRecordingTime(0);\r\n        if (recordingIntervalRef.current) {\r\n          clearInterval(recordingIntervalRef.current);\r\n        }\r\n      };\r\n      \r\n      mediaRecorder.start();\r\n      \r\n      // Auto-stop after 30 seconds\r\n      setTimeout(() => {\r\n        if (mediaRecorderRef.current && isRecording) {\r\n          stopRecording();\r\n        }\r\n      }, 30000);\r\n      \r\n    } catch (error) {\r\n      console.error('Error accessing microphone:', error);\r\n      alert('Could not access microphone. Please check permissions and try again.');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      stopVoiceRecording(mediaRecorderRef.current);\r\n      if (recordingIntervalRef.current) {\r\n        clearInterval(recordingIntervalRef.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatRecordingTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const quickResponses = [\r\n    \"I'm feeling stressed\",\r\n    \"I need motivation\",\r\n    \"I'm having trouble sleeping\",\r\n    \"I feel anxious\",\r\n    \"I'm feeling lonely\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"border-t border-gray-200 p-4\">\r\n      {/* Quick Response Buttons */}\r\n      <div className=\"mb-3\">\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {quickResponses.map((response, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => setInputMessage(response)}\r\n              className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition duration-200\"\r\n            >\r\n              {response}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recording Status */}\r\n      {isRecording && (\r\n        <div className=\"mb-3 flex items-center space-x-2 text-red-600\">\r\n          <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\r\n          <span className=\"text-sm font-medium\">Recording: {formatRecordingTime(recordingTime)}</span>\r\n          <span className=\"text-xs\">(Tap mic again to stop)</span>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Main Input Form */}\r\n      <form onSubmit={handleSubmit} className=\"flex space-x-3\">\r\n        {/* Voice Recording Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={isRecording ? stopRecording : startRecording}\r\n          className={`px-4 py-2 rounded-lg transition duration-200 flex items-center justify-center ${\r\n            isRecording \r\n              ? 'bg-red-500 text-white animate-pulse' \r\n              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n          }`}\r\n          title={isRecording ? 'Stop recording' : 'Start voice recording'}\r\n        >\r\n          {isRecording ? 'ðŸ”´' : 'ðŸŽ¤'}\r\n        </button>\r\n        \r\n        {/* Text Input */}\r\n        <div className=\"flex-1 relative\">\r\n          <textarea\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Share what's on your mind... I'm here to listen.\"\r\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none transition duration-200\"\r\n            rows=\"1\"\r\n            style={{\r\n              minHeight: '42px',\r\n              maxHeight: '120px',\r\n              overflowY: inputMessage.length > 100 ? 'auto' : 'hidden'\r\n            }}\r\n            disabled={isLoading}\r\n          />\r\n          \r\n          {/* Character Counter */}\r\n          {inputMessage.length > 0 && (\r\n            <div className=\"absolute bottom-1 right-2 text-xs text-gray-400\">\r\n              {inputMessage.length}/500\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Send Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!inputMessage.trim() || isLoading}\r\n          className=\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition duration-200 flex items-center space-x-2\"\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n              <span>Sending...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span>Send</span>\r\n              <span>â†—</span>\r\n            </>\r\n          )}\r\n        </button>\r\n      </form>\r\n      \r\n      {/* Emergency Support */}\r\n      <div className=\"mt-3 text-center\">\r\n        <p className=\"text-xs text-gray-500\">\r\n          In crisis? Contact{' '}\r\n          <a href=\"tel:988\" className=\"text-indigo-600 hover:underline font-medium\">\r\n            988 Suicide & Crisis Lifeline\r\n          </a>\r\n          {' '}or{' '}\r\n          <a href=\"tel:911\" className=\"text-red-600 hover:underline font-medium\">\r\n            911\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputArea;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}